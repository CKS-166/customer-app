# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger: none
# - main

pool: default

stages:
  - stage: build artifact
    jobs:
      - job: build
        steps:
          - task: Maven@3
            displayName: maven build
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              goals: 'package'
          - task: CopyFiles@2
            displayName: copy built artifact
            inputs:
              Contents: '**/*.war'
              TargetFolder: '$(build.artifactstagingdirectory)'
          - task: PublishBuildArtifacts@1
            displayName: publish artirfact
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
  - stage: deploy artifact
    condition: succeeded('build artifact')
    dependsOn: build artifact
    jobs:
    - deployment: VMDeploy
      displayName: Deploy to VM
      environment: 
        name: dev-vm
        resourceName: hostname
        resourceType: virtualMachine
      strategy:
        runOnce:
            deploy:   
              steps:
                - task: CopyFilesOverSSH@0
                  displayName: 'Securely copy files to the remote machine'
                  inputs:
                    sshEndpoint: 'ssh-ServiceConnection-dev'
                    sourceFolder: '$(System.DefaultWorkingDirectory)/_CKS-166.customer-app/drop/target'
                    targetFolder: /opt/tomcat/webapps/

        
        
    
